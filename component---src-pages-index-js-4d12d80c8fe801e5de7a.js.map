{"version":3,"sources":["webpack:///./src/utils/misc.js","webpack:///./src/pages/index.js"],"names":["withIndex","item","index","concat","Index","props","_this","_React$Component","call","this","state","vocab","componentDidMount","fetch","then","response","text","rawVocab","parse","err","output","xs","_this2","setState","slice","map","render","react_default","a","createElement","length","vocabItem","key","React","Component"],"mappings":"oMACaA,EAAY,SAACC,EAAMC,GAAP,MAAiB,CAACA,GAAOC,OAAOF,0CCIzD,IAEqBG,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAEKC,MAAQ,CACXC,MAAO,IAJQL,sCAQbM,0JACmBC,MAZf,mGAY0BC,KAChC,SAAAC,GAAQ,OAAIA,EAASC,gBADjBC,SAINC,IAAMD,EAAU,SAACE,EAAKC,GDrBN,IAAAC,ECsBdC,EAAKC,SAAS,CACZZ,ODvBYU,ECuBAD,EDvBMC,EAAGG,MAAM,ICuBPC,IAAIzB,4GAK9B0B,kBAAS,IACCf,EAAUF,KAAKC,MAAfC,MACR,OACEgB,EAAAC,EAAAC,cAAA,WACoB,IAAjBlB,EAAMmB,OACLH,EAAAC,EAAAC,cAAA,4BAEAF,EAAAC,EAAAC,cAAA,UACGlB,EAAMc,IAAI,SAAAM,GAAS,OAClBJ,EAAAC,EAAAC,cAAA,MAAIG,IAAKD,EAAU,IAAKA,EAAU,GAAK,EAAvC,IAA2CA,EAAU,YA9BhCE,IAAMC","file":"component---src-pages-index-js-4d12d80c8fe801e5de7a.js","sourcesContent":["export const tail = xs => xs.slice(1)\nexport const withIndex = (item, index) => [index].concat(item)\n","import React from 'react'\nimport parse from 'csv-parse'\n\nimport {tail, withIndex} from '../utils/misc'\n\nconst url = 'https://raw.githubusercontent.com/mikemcgowan/memrise-scraper-scala/master/memrise_database.csv'\n\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      vocab: [],\n    }\n  }\n\n  async componentDidMount() {\n    const rawVocab = await fetch(url).then(\n      response => response.text()\n    )\n\n    parse(rawVocab, (err, output) => {\n      this.setState({\n        vocab: tail(output).map(withIndex)\n      })\n    })\n  }\n\n  render() {\n    const { vocab } = this.state\n    return (\n      <div>\n        {vocab.length === 0 ? (\n          <p>Loading vocab &hellip;</p>\n        ) : (\n          <ul>\n            {vocab.map(vocabItem => (\n              <li key={vocabItem[0]}>{vocabItem[0] + 1} {vocabItem[1]}</li>\n            ))}\n          </ul>\n        )}\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}