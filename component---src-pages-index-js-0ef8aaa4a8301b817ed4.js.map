{"version":3,"sources":["webpack:///./src/utils/misc.js","webpack:///./src/pages/index.js"],"names":["withIndex","item","index","concat","Index","props","_this","_React$Component","call","this","state","vocab","componentDidMount","url","data","site","siteMetadata","fetch","then","response","text","rawVocab","parse","err","output","xs","_this2","setState","slice","map","render","react_default","a","createElement","length","vocabItem","key","React","Component","query"],"mappings":"oMACaA,EAAY,SAACC,EAAMC,GAAP,MAAiB,CAACA,GAAOC,OAAOF,kFCKpCG,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAEKC,MAAQ,CACXC,MAAO,IAJQL,sCAQbM,mJACEC,EAAMJ,KAAKJ,MAAMS,KAAKC,KAAKC,aAAaH,aACvBI,MAAMJ,GAAKK,KAAK,SAAAC,GAAQ,OAAIA,EAASC,gBAAtDC,SAENC,IAAMD,EAAU,SAACE,EAAKC,GDnBN,IAAAC,ECoBdC,EAAKC,SAAS,CACZhB,ODrBYc,ECqBAD,EDrBMC,EAAGG,MAAM,ICqBPC,IAAI7B,4GAK9B8B,kBAAS,IACCnB,EAAUF,KAAKC,MAAfC,MACR,OACEoB,EAAAC,EAAAC,cAAA,WACoB,IAAjBtB,EAAMuB,OACLH,EAAAC,EAAAC,cAAA,4BAEAF,EAAAC,EAAAC,cAAA,UACGtB,EAAMkB,IAAI,SAAAM,GAAS,OAClBJ,EAAAC,EAAAC,cAAA,MAAIG,IAAKD,EAAU,IAChBA,EAAU,GAAK,EADlB,IACsBA,EAAU,GADhC,IACqCA,EAAU,YA9B1BE,IAAMC,WAwC5BC,EAAK","file":"component---src-pages-index-js-0ef8aaa4a8301b817ed4.js","sourcesContent":["export const tail = xs => xs.slice(1)\nexport const withIndex = (item, index) => [index].concat(item)\n","import React from 'react'\nimport parse from 'csv-parse'\nimport { graphql } from 'gatsby'\n\nimport { tail, withIndex } from '../utils/misc'\n\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      vocab: [],\n    }\n  }\n\n  async componentDidMount() {\n    const url = this.props.data.site.siteMetadata.url\n    const rawVocab = await fetch(url).then(response => response.text())\n\n    parse(rawVocab, (err, output) => {\n      this.setState({\n        vocab: tail(output).map(withIndex),\n      })\n    })\n  }\n\n  render() {\n    const { vocab } = this.state\n    return (\n      <div>\n        {vocab.length === 0 ? (\n          <p>Loading vocab &hellip;</p>\n        ) : (\n          <ul>\n            {vocab.map(vocabItem => (\n              <li key={vocabItem[0]}>\n                {vocabItem[0] + 1} {vocabItem[1]} {vocabItem[2]}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    )\n  }\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        url\n      }\n    }\n  }\n`\n"],"sourceRoot":""}